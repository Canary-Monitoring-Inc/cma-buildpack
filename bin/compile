#!/bin/sh
#
#  Canary Monitoring Agent "compile" script. This fetches the latest binary from
#  Canary's public assets S3 bucket and drops it in a well-known location. It also
#  sets up some things so we run with the correct environment
#
#  Invoked by Heroku as:
#    bin/compile BUILD_DIR CACHE_DIR ENV_DIR
#
set -e

distribution_prefix=https://canary-public-assets.s3-us-west-2.amazonaws.com/dist/canary_monitoring_agent

cd $1

(mkdir -p vendor/cma; cd vendor/cma
curl -sO $distribution_prefix/latest.txt
tar=$(cat latest.txt)
echo "-----> Installing Canary Monitoring Agent from `cat latest.txt`"
curl -sO $distribution_prefix/$tar
tar xf $tar
rm $tar)

#
#  Handle configuration. We want config in the environment, so
#  copy the Heroku env vars in a file and generate a wrapper
#  script that will read that and the repository's base
#  configuration as well
#
(mkdir .profile.d && cd .profile.d
cat >run-cma.sh <<EOF
#!/usr/bin/env bash
#
#  Canary Monitoring Agent wrapper script. Generated by the corresponding
#  buildpack, see https://github.com/Canary-Monitoring-Inc/cma-buildpack/
#  for details.
#
set -a

EOF
env_dir=$3
if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
        echo export "$e=\`cat <<EOF
$(cat $env_dir/$e)
EOF\'" >>run-cma.sh
    done
fi
cat >>run-cma.sh <<'EOF'

vendor/cma/Canary.Shared.Monitoring.Agent 2>&1 &
EOF
chmod +x run-cma.sh)
